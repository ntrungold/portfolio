{"version":3,"sources":["components/Popup/Modal.tsx","components/Popup/ModalPopup.styles.ts","components/Popup/BasePopupWrapper.tsx","components/ControlPanel.tsx","utilities/data.ts","components/SetViewer.tsx","components/GameBoard.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Overlay","styled","div","Modal","onBackdropClick","children","ReactDOM","createPortal","onClick","e","stopPropagation","document","getElementById","PopupContainer","DesktopPopupContainer","Header","h3","BasePopupWrapper","isPopupVisible","ControlPanel","setSet","useState","setIsPopupVisible","togglePopup","wasPopupVisible","Col","ButtonGroup","Button","items","SETS","Math","floor","random","length","variant","SetViewer","set","Alert","Heading","question","GameBoard","answerRevealed1","reveal1","answerRevealed2","reveal2","answerRevealed3","reveal3","answerRevealed4","reveal4","answerRevealed5","reveal5","answerRevealed6","reveal6","answerRevealed7","reveal7","answerRevealed8","reveal8","Table","bordered","a1","p1","a5","p5","a2","p2","a6","p6","a3","p3","a7","p7","a4","p4","a8","p8","App","activeSet","setActiveSet","Container","className","Row","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode"],"mappings":"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","file":"static/js/main.e2e7da4f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport styled from \"styled-components\";\r\n\r\ninterface ModalProps {\r\n    onBackdropClick: () => void;\r\n}\r\n\r\nconst Overlay = styled.div`\r\n    background-color: rgba(0,0,0,0,0.5);\r\n    position: fixed:\r\n    height: 100%;\r\n    width: 100%;\r\n    top: 0;\r\n    left: 0;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`\r\n\r\nconst Modal: React.FC<ModalProps> = ({onBackdropClick, children}) => {\r\n    return ReactDOM.createPortal(<Overlay onClick={onBackdropClick}>\r\n        <div onClick={e => e.stopPropagation()}>\r\n            {children}\r\n        </div>\r\n    </Overlay>, document.getElementById('popup-root')!);\r\n}\r\n\r\nexport default Modal","import styled from 'styled-components'\r\n\r\n\r\nconst PopupContainer = styled.div `\r\n    background-color: blue;\r\n    display: flex;\r\n    flex-direction:collapseTextChangeRangesAcrossMultipleVersions;\r\n    align-items: ClientRequest;\r\n    position: relative;\r\n\r\n`;\r\n\r\nexport const DesktopPopupContainer = styled(PopupContainer)`\r\n    border-radius: 7px;\r\n    box-shadow: 0 0 32px rgba(0,0,0,0.5);\r\n    padding: 40px;\r\n    width: 450px;\r\n    font-size: 26px;\r\n`\r\n\r\nexport const Header = styled.h3`\r\n    color: white;\r\n    font size: 35px;\r\n    line-height: 1em;\r\n    font-weight: 300;\r\n    margin: 5px 0 10px;\r\n    text align: center;\r\n`","import React from \"react\";\r\nimport Modal from \"./Modal\";\r\nimport { DesktopPopupContainer, Header } from \"./ModalPopup.styles\";\r\n\r\ninterface BasePopupWrapperProps {\r\n    isPopupVisible: boolean;\r\n    onBackdropClick: () => void;\r\n}\r\n\r\nconst BasePopupWrapper : React.FC<BasePopupWrapperProps> = ({onBackdropClick, isPopupVisible}) => {\r\n    if(!isPopupVisible) {\r\n        return null\r\n    }\r\n    \r\n    return (<Modal onBackdropClick={onBackdropClick}>\r\n        <DesktopPopupContainer>\r\n            <Header>Setup:</Header>\r\n           Split into two teams and select one person as the host. The official rules are located at the link provided at the bottom of the page.\r\n        </DesktopPopupContainer>\r\n    </Modal>);\r\n}\r\n\r\nexport default BasePopupWrapper","import { Button, ButtonGroup, Col } from 'react-bootstrap';\r\nimport {Set} from '../interfaces/set';\r\nimport SETS from '../assets/q-sets.json'\r\nimport { getRandomElement } from '../utilities/data';\r\nimport React, {useState} from 'react';\r\nimport BasePopupWrapper from './Popup/BasePopupWrapper';\r\n\r\n\r\nexport function ControlPanel({setSet}: {setSet: (s: Set)=>void}): JSX.Element {\r\n    function setRandomSet() {\r\n        setSet(getRandomElement(SETS as Set[]))\r\n    }\r\n\r\n    //adding the popup for How to Play\r\n    const [isPopupVisible, setIsPopupVisible] = useState<boolean>(false)\r\n    const togglePopup = () => {\r\n        setIsPopupVisible(wasPopupVisible => !wasPopupVisible)\r\n    }\r\n\r\n    \r\n    return <Col>\r\n    \r\n    <ButtonGroup aria-label=\"Button Set\">\r\n        <Button onClick={setRandomSet}>New Game</Button>\r\n        <Button onClick={togglePopup} variant=\"secondary\">Setup</Button>\r\n        <BasePopupWrapper isPopupVisible={isPopupVisible} onBackdropClick= {togglePopup}/>\r\n    </ButtonGroup>\r\n    </Col>\r\n}","//from the stack page professor Bart used in his TA trainer tutorial\r\n//returns one random element\r\nexport function getRandomElement<T>(items: T[]): T{\r\n    return items[Math.floor(Math.random()*items.length)];\r\n}","import {Col, Alert} from 'react-bootstrap'\r\nimport {Set} from '../interfaces/set'\r\nexport function SetViewer({set}: \r\n    {set: Set}): JSX.Element {\r\n    return <Col>\r\n    <Alert variant=\"primary\">\r\n        <Alert.Heading>We asked 100 people:</Alert.Heading>\r\n        <p>\r\n            {set.question}\r\n        </p>\r\n    </Alert>\r\n    </Col>\r\n}","import {Table, Button} from 'react-bootstrap'\r\nimport {Set} from '../interfaces/set'\r\nexport function GameBoard({set, \r\n    answerRevealed1, reveal1,\r\n    answerRevealed2, reveal2,\r\n    answerRevealed3, reveal3,\r\n    answerRevealed4, reveal4,\r\n    answerRevealed5, reveal5,\r\n    answerRevealed6, reveal6,\r\n    answerRevealed7, reveal7,\r\n    answerRevealed8, reveal8,\r\n}: \r\n    {set: Set,\r\n        answerRevealed1: boolean,  reveal1: (r:boolean) =>void,\r\n        answerRevealed2: boolean,  reveal2: (r:boolean) =>void,\r\n        answerRevealed3: boolean,  reveal3: (r:boolean) =>void,\r\n        answerRevealed4: boolean,  reveal4: (r:boolean) =>void,\r\n        answerRevealed5: boolean,  reveal5: (r:boolean) =>void,\r\n        answerRevealed6: boolean,  reveal6: (r:boolean) =>void,\r\n        answerRevealed7: boolean,  reveal7: (r:boolean) =>void,\r\n        answerRevealed8: boolean,  reveal8: (r:boolean) =>void\r\n    }): JSX.Element {\r\n        return <Table bordered>\r\n            <tbody>\r\n                <tr>\r\n                    <td><Button onClick={() => reveal1(!answerRevealed1)}>{answerRevealed1 ? <p>{set.a1}                 | Points: {set.p1}</p>: (1)}</Button></td>\r\n                    <td><Button onClick={() => reveal5(!answerRevealed5)}>{answerRevealed5 ? <p>{set.a5}                 | Points: {set.p5}</p>: (5)}</Button></td>\r\n                </tr>\r\n                <tr>\r\n                    <td><Button onClick={() => reveal2(!answerRevealed2)}>{answerRevealed2 ? <p>{set.a2}                 | Points: {set.p2}</p>: (2)}</Button></td>\r\n                    <td><Button onClick={() => reveal6(!answerRevealed6)}>{answerRevealed6 ? <p>{set.a6}                 | Points: {set.p6}</p>: (6)}</Button></td>\r\n                </tr>\r\n                <tr>\r\n                    <td><Button onClick={() => reveal3(!answerRevealed3)}>{answerRevealed3 ? <p>{set.a3}                 | Points: {set.p3}</p>: (3)}</Button></td>\r\n                    <td><Button onClick={() => reveal7(!answerRevealed7)}>{answerRevealed7 ? <p>{set.a7}                 | Points: {set.p7}</p>: (7)}</Button></td>\r\n                </tr>\r\n                <tr>\r\n                    <td><Button onClick={() => reveal4(!answerRevealed4)}>{answerRevealed4 ? <p>{set.a4}                 | Points: {set.p4}</p>: (4)}</Button></td>\r\n                    <td><Button onClick={() => reveal8(!answerRevealed8)}>{answerRevealed8 ? <p>{set.a8}                 | Points: {set.p8}</p>: (8)}</Button></td>\r\n                </tr>\r\n            </tbody>\r\n        </Table>\r\n    }","import React, {useState} from 'react';\r\nimport './App.css';\r\nimport SETS from './assets/q-sets.json';\r\nimport { ControlPanel } from './components/ControlPanel';\r\nimport { SetViewer } from './components/SetViewer';\r\nimport {GameBoard} from './components/GameBoard'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Container, Row} from 'react-bootstrap';\r\nimport {Set} from './interfaces/set';\r\n\r\n\r\nfunction App(): JSX.Element {\r\n  const [activeSet, setActiveSet] = useState<Set>(SETS[0] as Set);\r\n  const [answerRevealed1, reveal1] = useState<boolean>(false);\r\n  const [answerRevealed2, reveal2] = useState<boolean>(false);\r\n  const [answerRevealed3, reveal3] = useState<boolean>(false);\r\n  const [answerRevealed4, reveal4] = useState<boolean>(false);\r\n  const [answerRevealed5, reveal5] = useState<boolean>(false);\r\n  const [answerRevealed6, reveal6] = useState<boolean>(false);\r\n  const [answerRevealed7, reveal7] = useState<boolean>(false);\r\n  const [answerRevealed8, reveal8] = useState<boolean>(false);\r\n\r\n  return (\r\n    <Container className=\"App\">\r\n      <Row>\r\n        <strong>Let's Play Family Feud!</strong>\r\n      </Row> \r\n      <Row>\r\n        <ControlPanel setSet={setActiveSet} ></ControlPanel>\r\n        <SetViewer set={activeSet}></SetViewer>\r\n      </Row>\r\n      <Row>\r\n        <GameBoard \r\n          set={activeSet} \r\n          reveal1={reveal1} answerRevealed1= {answerRevealed1}\r\n          reveal2={reveal2} answerRevealed2= {answerRevealed2}\r\n          reveal3={reveal3} answerRevealed3= {answerRevealed3}\r\n          reveal4={reveal4} answerRevealed4= {answerRevealed4}\r\n          reveal5={reveal5} answerRevealed5= {answerRevealed5}\r\n          reveal6={reveal6} answerRevealed6= {answerRevealed6}\r\n          reveal7={reveal7} answerRevealed7= {answerRevealed7}\r\n          reveal8={reveal8} answerRevealed8= {answerRevealed8}\r\n          ></GameBoard>\r\n      </Row>\r\n        \r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}